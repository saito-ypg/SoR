実装すること
順番ごとにやるもの
基本的なの
☑ 攻撃クラスのベースおよび発展クラス（円、矩形、扇）→関数使わないし、構造体がいいか?→再考の必要あるかも
☑? 子リジョンマネージャーのhittest各オーバーロード実装、TakeAttacked呼ぶまで
	-攻撃当たったら無名空間の関数UnderAttackを呼ぶ。関数の中に同じ攻撃当たらないようにとか書く?
・ １度の攻撃で多段ヒットしないような仕組みを考える必要がある
!・スキルクラスのベースを作成、そこから通常攻撃、スキル攻撃（,回避行動）を追加する。
　-skillの発動方法は出来てきた。発動はplayerのactivateSkill→skillbaseのActivateが呼ばれ…
　-updateはplayerから毎フレーム呼ぶ、actionはスキル効果が続く限り呼ぶ。actionが呼ばれるのはupdateの中でいい？
  -actionではsequenceが続く限り呼ぶ感じ。stepによってswitchで呼ぶの変える?
  -当たり判定を呼ぶのはactionのなか？


・ 攻撃クラスに付随する攻撃情報クラス（ダメージ、ノックバック、付属効果種類、効果強度、効果時間とか？)
	構造と渡し方どうしよう
	付加部分はポインタでやるべきか？
	ノックバックはわざわざ入れる必要ない。方向は大体決まってるから
・ takeAttacked中身実装、アクタクラスに効果入れとくvectorとか

・スキルクラスベースおよび発展スキル
・攻撃範囲を時間で分割？hittestは分割毎に呼ぶ?総時間と重み付けみたいな…？もしくは全部当たったの見てからディレイするの？



演出
・攻撃範囲
・カメラエフェクト
・se
・テキスト表示


入力部分をストレスフリーにするやつ
・先行入力
・キャンセル連携
・攻撃追尾

順番関係ないもの
・名前空間のものクラスにするべきか検討
・アクタのupdate元のほうに追加することあれば


余裕あれば
・動的確保はスマートポインターで



